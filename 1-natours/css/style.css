/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* normalize css */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
}

html {
  /* setting a global font-size and using rem elsewhere is handy for media
  queries */
  /* set font-size to a percentage to better handle accessibility needs */
  font-size: 62.5%;
  /* set box sizing like so to not have it influence widgets and the like*/
  box-sizing: inherit;
}

body {
  font-family: 'Lato', Arial, Helvetica, sans-serif;
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.7;
  color: #777;
  /* set a padding on the entire body for some visual space */
  padding: 2rem;
  /* borders and paddings wont count towards the width and height of element */
  box-sizing: border-box;
}

.header {
  height: 95vh;
  /* set the background of a linear gradient overlaid on a photo */
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.6),
      rgba(40, 180, 133, 0.6)
    ),
    url('../img/hero.jpg');
  /* locks the background image to the right edge of the screen */
  background-size: cover;
  /* locks the background image to the top of the screen */
  background-position: top;
  /* describe a polygon to clip the header */
  clip-path: polygon(100% 0, 100% 80%, 0 100%, 0 0);
  /* designate this element as the parent for .logo-box */
  position: relative;
}

.logo-box {
  /* set absolute positioning */
  position: absolute;
  /* move 40px away from top and left of .header */
  top: 40px;
  left: 40px;
}

.logo {
  /* define the height, the width is automatically adjusted */
  height: 2rem;
}

.text-box {
  /* set centering via absolute position */
  position: absolute;
  /* shift the top left edge of the div 50% away from top and left of parent */
  top: 40%;
  left: 50%;
  /* translate the div -50% of its own x and y lengths, thereby centering */
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: white;
  /* set the text to be all uppercase */
  text-transform: uppercase;
  /* controls whether or not backface of an element is visible during
  translation, fixes some animation bugs  */
  backface-visibility: hidden;
  /* give space between the heading and the button */
  margin-bottom: 4rem;
}

.heading-primary-main {
  display: block;
  font-size: 5rem;
  font-weight: 400;
  letter-spacing: 2rem;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-in-out;
}

.heading-primary-sub {
  display: block;
  font-size: 2rem;
  font-weight: 400;
  letter-spacing: 0.575rem;
  animation-name: moveInRight;
  /* define the overall length of the anim */
  animation-duration: 1s;
  /* define a function to control progression of the animation */
  animation-timing-function: ease-in-out;
  /* set a delay for an animation */
  /* animation-delay: 3s; */
  /* set how many times an anim will play */
  /* animation-iteration-count: 3; */
}

/* browsers are optimized for transform and opacity animations */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-6rem);
  }

  /* simulate a rebound */
  80% {
    transform: translateX(0.5rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(6rem);
  }

  80% {
    transform: translateX(-0.5rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(6rem);
  }

  80% {
    transform: translateY(-0.5rem);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* pseudoclasses */
/* stlying links that have not been visited and those that have */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  color: black;
  font-weight: 700;
  padding: 1rem 2rem;
  /* treat the class as a block whereas normally it would be inline*/
  /* since the inline block is treated as text we can set text-align on the
  parent*/
  display: inline-block;
  /* make the button look like a pill */
  border-radius: 10rem;
  /* set the transition timing and function for all animations. fixes pesky bugs
  around animation resetting too */
  transition: all 100ms ease-in;
  /* setting the button as the relative for the ::after button */
  position: relative;
}

.btn:hover {
  /* on hover, move the btn 4px up and give it a box shadow*/
  transform: translateY(-0.25rem);
  box-shadow: 0 0.75rem 2rem rgb(0, 0, 0, 0.4);
}

.btn:active {
  /* when clicked, move it down to initial position */
  transform: translateY(0);
  box-shadow: 0 0.25rem 1rem rgb(0, 0, 0, 0.4);
}

.btn-white {
  background-color: white;
  color: #777;
}

/* ::after and ::before add 'elements' before and after a real element */
.btn::after {
  /* must specify a content and display prop otherwise nothing will appear */
  content: '';
  /* aping the parent element */
  display: inline-block;
  /* setting the sizing of the button and position */
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  /* hiding the pseudoelement behind the button */
  z-index: -1;
  /* defining the transition property on the initial state of the element */
  transition: all 0.4s;
}

.btn-white::after {
  background-color: white;
}

/* select the btn::after when .btn is hovered */
.btn:hover::after {
  /* scale up the element */
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn-animated {
  /* adding an animation */
  animation-name: moveInBottom;
  animation-duration: 1s;
  animation-delay: 1s;
  animation-timing-function: ease-in-out;
  /* apply the styles of 0 percent before the animation starts */
  animation-fill-mode: backwards;
}
